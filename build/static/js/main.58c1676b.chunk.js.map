{"version":3,"sources":["index.js","App.js","components/CalcButton.jsx"],"names":["ReactDOM","render","StrictMode","document","getElementById","App","props","handleClick","input","inputValue","state","condition","isLastInputNotOpr","length","isLastInputOpr","value","setState","concat","slice","handleScrollTop","handleKeycode","code","key","calculate","reset","handleKeypress","e","objDiv","querySelector","scrollLeft","scrollWidth","result","solve","alert","eval","toString","console","log","ref","React","createRef","this","focus","onkeyup","className","map","name","onClick","Component","CalcButton"],"mappings":"uHAAA,yDAGAA,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U,o6CCHpBC,I,oYACJ,aAAYC,OAAQ,IAAD,mMACjB,uBAAMA,OADW,MAOnBC,YAAc,SAACC,GAAW,IAChBC,EAAe,MAAKC,MAApBD,WACFE,EAAsB,MAAVH,GAA2B,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,EAC/DI,EACkC,MAAtCH,EAAWA,EAAWI,OAAS,IACO,MAAtCJ,EAAWA,EAAWI,OAAS,IACO,MAAtCJ,EAAWA,EAAWI,OAAS,IACO,MAAtCJ,EAAWA,EAAWI,OAAS,GAC3BC,EACkC,MAAtCL,EAAWA,EAAWI,OAAS,IACO,MAAtCJ,EAAWA,EAAWI,OAAS,IACO,MAAtCJ,EAAWA,EAAWI,OAAS,IACO,MAAtCJ,EAAWA,EAAWI,OAAS,GAC7BE,EAAQP,EAEZ,GAAIG,EACFI,EAAQP,EACJI,EACF,MAAKI,SAAS,CACZP,WAAYA,EAAWQ,OAAOF,KAGhC,MAAKC,SAAS,CACZP,WAAYA,EAAWS,MAAM,EAAGT,EAAWI,OAAS,GAAGI,OAAOF,UAIlE,GAAID,EAAgB,CAClB,GAAc,MAAVC,EACF,OAEF,MAAKC,SAAS,CACZP,WAAYA,EAAWQ,OAAOF,UAGhC,MAAKC,SAAS,CACZP,WAAYA,EAAWQ,OAAOF,KAIpC,MAAKI,mBA/CY,MAiDnBC,cAAgB,SAACC,EAAMC,GACR,UAATD,EACF,MAAKE,YACa,YAATF,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,YAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,WAATc,EACT,MAAKd,YAAY,KACC,cAATc,EACT,MAAKd,YAAY,KACC,mBAATc,EACT,MAAKd,YAAY,KACC,iBAATc,EACT,MAAKd,YAAY,KACC,mBAATc,EACT,MAAKd,YAAY,KACC,UAATc,EACT,MAAKd,YAAY,KACC,UAATc,GAA4B,MAARC,EAC7B,MAAKf,YAAY,KACC,UAATc,GAA4B,MAARC,EAC7B,MAAKf,YAAY,KACC,WAATc,GAA6B,MAARC,EAC9B,MAAKf,YAAY,KACC,WAATc,GACT,MAAKG,SA7GU,MAgHnBC,eAAiB,SAACC,GAChB,MAAKN,cAAcM,EAAEL,KAAMK,EAAEJ,KAC7B,MAAKH,mBAlHY,MAqHnBA,gBAAkB,WAChB,IAAMQ,EAASxB,SAASyB,cAAc,mBACtCD,EAAOE,WAAaF,EAAOG,aAvHV,MA0HnBP,UAAY,WAAO,IAAD,YACe,MAAKb,MAA5BD,WADQ,YACRA,WAAYsB,OADJ,YACIA,OACdjB,eACkC,MAAtCL,WAAWA,WAAWI,OAAS,IACO,MAAtCJ,WAAWA,WAAWI,OAAS,IACO,MAAtCJ,WAAWA,WAAWI,OAAS,IACO,MAAtCJ,WAAWA,WAAWI,OAAS,GAC7BmB,MAAQvB,WACZ,GAAmB,KAAfA,WASJ,OARIK,eACFmB,MAAM,yEAEND,MAAQE,KAAKzB,YAEf,MAAKO,SAAS,CACZP,WAAYuB,MAAMG,aAEbJ,QA3IU,MA6InBP,MAAQ,WACNY,QAAQC,IAAI,UACZ,MAAKrB,SAAS,CACZP,WAAY,GACZsB,OAAQ,KA/IV,MAAKO,IAAMC,6CAAMC,YACjB,MAAK9B,MAAQ,CACXD,WAAY,IAJG,M,qNAoJnB,WACEgC,KAAKH,IAAII,U,+BAEX,WAGEvC,SAASwC,QAAUF,KAAKhB,iB,oBAG1B,WAAU,IAAD,SAEwBgB,KAAK/B,MAA5BD,EAFD,EAECA,WAFD,EAEasB,OAEpB,OACE,mEAAKa,UAAU,OAAf,UACE,kEAAKA,UAAU,cAAf,SACE,0EAAKnC,MAEP,mEAAKmC,UAAU,YAAf,UACE,mEAAKA,UAAU,YAAf,UATc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAU7CC,KAAI,SAACC,GAChB,OACE,2DAAC,sDAAD,CAAYvC,YAAa,EAAKA,YAAwBuC,KAAMA,GAAZA,MAGpD,qEACEF,UAAU,gBACVG,QAASN,KAAKlB,UACde,IAAK,SAACA,GACJ,EAAKA,IAAMA,GAJf,eASA,qEAAQM,UAAU,YAAYG,QAASN,KAAKjB,MAA5C,kBAIF,mEAAKoB,UAAU,WAAf,UACE,qEAAQG,QAAS,kBAAM,EAAKxC,YAAY,MAAxC,eACA,qEAAQwC,QAAS,kBAAM,EAAKxC,YAAY,MAAxC,eACA,qEAAQwC,QAAS,kBAAM,EAAKxC,YAAY,MAAxC,eACA,qEAAQwC,QAAS,kBAAM,EAAKxC,YAAY,MAAxC,4B,KA/LMyC,8CAuMH3C,2B,+BC3Mf,sBAiBe4C,IAff,YAA4C,IAAtBH,EAAqB,EAArBA,KAAMvC,EAAe,EAAfA,YAC1B,OACE,8BACE,wBACEqC,UAAU,aACVG,QAAS,WACPxC,EAAYuC,IAHhB,SAMGA,S","file":"static/js/main.58c1676b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import React, { Component } from \"react\";\nimport CalcButton from \"./components/CalcButton\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      inputValue: \"\",\n    };\n  }\n  handleClick = (input) => {\n    const { inputValue } = this.state;\n    const condition = input === \"+\" || input === \"-\" || input === \"*\" || input === \"/\";\n    const isLastInputNotOpr =\n      inputValue[inputValue.length - 1] !== \"+\" &&\n      inputValue[inputValue.length - 1] !== \"-\" &&\n      inputValue[inputValue.length - 1] !== \"*\" &&\n      inputValue[inputValue.length - 1] !== \"/\";\n    const isLastInputOpr =\n      inputValue[inputValue.length - 1] === \"+\" ||\n      inputValue[inputValue.length - 1] === \"-\" ||\n      inputValue[inputValue.length - 1] === \"*\" ||\n      inputValue[inputValue.length - 1] === \"/\";\n    let value = input;\n\n    if (condition) {\n      value = input;\n      if (isLastInputNotOpr) {\n        this.setState({\n          inputValue: inputValue.concat(value),\n        });\n      } else {\n        this.setState({\n          inputValue: inputValue.slice(0, inputValue.length - 1).concat(value),\n        });\n      }\n    } else {\n      if (isLastInputOpr) {\n        if (value === \"0\") {\n          return;\n        }\n        this.setState({\n          inputValue: inputValue.concat(value),\n        });\n      } else {\n        this.setState({\n          inputValue: inputValue.concat(value),\n        });\n      }\n    }\n    this.handleScrollTop();\n  };\n  handleKeycode = (code, key) => {\n    if (code === \"Enter\") {\n      this.calculate();\n    } else if (code === \"Numpad0\") {\n      this.handleClick(\"0\");\n    } else if (code === \"Numpad1\") {\n      this.handleClick(\"1\");\n    } else if (code === \"Numpad2\") {\n      this.handleClick(\"2\");\n    } else if (code === \"Numpad3\") {\n      this.handleClick(\"3\");\n    } else if (code === \"Numpad4\") {\n      this.handleClick(\"4\");\n    } else if (code === \"Numpad5\") {\n      this.handleClick(\"5\");\n    } else if (code === \"Numpad6\") {\n      this.handleClick(\"6\");\n    } else if (code === \"Numpad7\") {\n      this.handleClick(\"7\");\n    } else if (code === \"Numpad8\") {\n      this.handleClick(\"8\");\n    } else if (code === \"Numpad9\") {\n      this.handleClick(\"9\");\n    } else if (code === \"Digit0\") {\n      this.handleClick(\"0\");\n    } else if (code === \"Digit1\") {\n      this.handleClick(\"1\");\n    } else if (code === \"Digit2\") {\n      this.handleClick(\"2\");\n    } else if (code === \"Digit3\") {\n      this.handleClick(\"3\");\n    } else if (code === \"Digit4\") {\n      this.handleClick(\"4\");\n    } else if (code === \"Digit5\") {\n      this.handleClick(\"5\");\n    } else if (code === \"Digit6\") {\n      this.handleClick(\"6\");\n    } else if (code === \"Digit7\") {\n      this.handleClick(\"7\");\n    } else if (code === \"Digit8\") {\n      this.handleClick(\"8\");\n    } else if (code === \"Digit9\") {\n      this.handleClick(\"9\");\n    } else if (code === \"NumpadAdd\") {\n      this.handleClick(\"+\");\n    } else if (code === \"NumpadSubtract\") {\n      this.handleClick(\"-\");\n    } else if (code === \"NumpadDivide\") {\n      this.handleClick(\"/\");\n    } else if (code === \"NumpadMultiply\") {\n      this.handleClick(\"*\");\n    } else if (code === \"Slash\") {\n      this.handleClick(\"/\");\n    } else if (code === \"Equal\" && key === \"+\") {\n      this.handleClick(\"+\");\n    } else if (code === \"Minus\" && key === \"-\") {\n      this.handleClick(\"-\");\n    } else if (code === \"Digit8\" && key === \"*\") {\n      this.handleClick(\"*\");\n    } else if (code === \"Escape\") {\n      this.reset();\n    }\n  };\n  handleKeypress = (e) => {\n    this.handleKeycode(e.code, e.key);\n    this.handleScrollTop();\n  };\n\n  handleScrollTop = () => {\n    const objDiv = document.querySelector(\".input-value h2\");\n    objDiv.scrollLeft = objDiv.scrollWidth;\n  };\n\n  calculate = () => {\n    const { inputValue, result } = this.state;\n    const isLastInputOpr =\n      inputValue[inputValue.length - 1] === \"+\" ||\n      inputValue[inputValue.length - 1] === \"-\" ||\n      inputValue[inputValue.length - 1] === \"*\" ||\n      inputValue[inputValue.length - 1] === \"/\";\n    let solve = inputValue;\n    if (inputValue === \"\") return;\n    if (isLastInputOpr) {\n      alert(\"완성되지 않은 수식입니다.\");\n    } else {\n      solve = eval(inputValue);\n    }\n    this.setState({\n      inputValue: solve.toString(),\n    });\n    return result;\n  };\n  reset = () => {\n    console.log(\"inhere\");\n    this.setState({\n      inputValue: \"\",\n      result: 0,\n    });\n  };\n  componentDidUpdate() {\n    this.ref.focus();\n  }\n  componentDidMount() {\n    //onkeypress doesnt have escape event\n    //document.onkeypress = this.handleKeypress;\n    document.onkeyup = this.handleKeypress;\n  }\n\n  render() {\n    const buttonNames = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\n    const { inputValue, result } = this.state;\n\n    return (\n      <div className=\"calc\">\n        <div className=\"input-value\">\n          <h2>{inputValue}</h2>\n        </div>\n        <div className=\"container\">\n          <div className=\"numberpad\">\n            {buttonNames.map((name) => {\n              return (\n                <CalcButton handleClick={this.handleClick} key={name} name={name}></CalcButton>\n              );\n            })}\n            <button\n              className=\"btn-calculate\"\n              onClick={this.calculate}\n              ref={(ref) => {\n                this.ref = ref;\n              }}\n            >\n              =\n            </button>\n            <button className=\"btn-reset\" onClick={this.reset}>\n              C\n            </button>\n          </div>\n          <div className=\"operator\">\n            <button onClick={() => this.handleClick(\"+\")}>+</button>\n            <button onClick={() => this.handleClick(\"-\")}>-</button>\n            <button onClick={() => this.handleClick(\"*\")}>*</button>\n            <button onClick={() => this.handleClick(\"/\")}>/</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./CalcButton.css\";\nfunction CalcButton({ name, handleClick }) {\n  return (\n    <div>\n      <button\n        className=\"btn-number\"\n        onClick={() => {\n          handleClick(name);\n        }}\n      >\n        {name}\n      </button>\n    </div>\n  );\n}\n\nexport default CalcButton;\n"],"sourceRoot":""}